import { CardGridSkeleton } from "@/components/card-grid-skeleton";
import { ImageListStreamed } from "@/components/image-list-streamed";
import { LoadingSpinner } from "@/components/loading-spinner";
import { SearchBox } from "@/components/search-box";
import { getImagesStreamed } from "@/lib/db/api";
import { cn } from "@/lib/utils";
import { unstable_noStore } from "next/cache";
import { Suspense } from "react";

export const dynamic = "force-dynamic";
export default async function Home({
  searchParams,
}: {
  searchParams: { q?: string; stale?: string };
}) {
  unstable_noStore();
  return (
    <main className="p-8 space-y-4">
      <h1 className="font-medium text-2xl">
        Semantic Image Search (using Vercel AI SDK)
      </h1>
      <p>
        This demo showcases how to use the Vercel AI SDK to build semantic
        search applications. Try it out by searching for an image. Your query
        will be embedded and then compared against the embedded image titles and
        descriptions (generated by GPT-4o).
      </p>
      <div className="border-border border-t pt-4 space-y-4">
        <SearchBox query={searchParams.q} />
        <Suspense fallback={<CardGridSkeleton />}>
          <ImageList query={searchParams.q} stale={searchParams.stale} />
        </Suspense>
      </div>
    </main>
  );
}

const ImageList = async ({
  query,
  stale,
}: {
  query?: string;
  stale?: string;
}) => {
  const { images, status } = await getImagesStreamed(query);

  return (
    <div className="relative">
      <div className={cn(stale === "true" ? "opacity-60" : "")}>
        <ImageListStreamed images={images} />
      </div>
      {stale === "true" || status ? (
        <LoadingSpinner status={status} stale={stale === "true"} />
      ) : null}
    </div>
  );
};
